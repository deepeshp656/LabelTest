name: Github Auto PR Label,Approve and Merge

on: [pull_request]
jobs:
  AutoLabelandMerge:
    runs-on: ubuntu-latest
    env:
      #TGT_PATH can contain multiple path and path/prefix-of-filename seperated with space format ex : shared/access/system/app-role/approle shared/terraform 
      #in example approle is prefix of files under app-role directory  
      TGT_PATH: shared/access/system/app-role/approle 
    steps:
      - name: Checkout 
        uses: actions/checkout@v2
        
      - name: Checkout head and base branch
        id: HeadandBase
        run: |
          git fetch --no-tags  origin ${{ github.base_ref }}
          git fetch --no-tags  origin ${{ github.head_ref }}
          # get the actual source for two branches
          git checkout origin/${{ github.base_ref }}
          git checkout origin/${{ github.head_ref }}
          # get back to the merge commit
          git checkout ${{ github.sha }}
          git update-index --chmod=+x ./script2.sh
          



      - name: check1
        run: |
          #Define variable to store result of git diff and pattmatch state of matching files
            PattFound="False"      
            
            CHANGED_FILES=$(git diff --name-only remotes/origin/${{ github.base_ref }}...remotes/origin/${{ github.head_ref }} )
            
            #changing format of variable to array 
            CHANGED_FILES_ARR=($CHANGED_FILES)
            Path=($TGT_PATH)
            
            
            #iterate each file to match with pattern mentioned in TGT_Files in format of path/prefix-of-file or path
            for i in "${CHANGED_FILES_ARR[@]}"
                  do
                  
                     for j in "${Path[@]}"
                         do	
                             
                             #matching files with Path pattern TGT_PATH
                             if [[ ("$i" == "$j"* )]]; then
                             
                                #will exit the loop if matched
                                PattFound="True"
                                break
                             
                             else
                             
                                PattFound="False"
                                
                             fi
                         done
                   
                     #after each iteration if any files found which is not under the TGT_PATH patter workflow will exit 
                     if [[ ("$PattFound" == "False" )]]; then
                          echo "PR contains changes which cannot be auto-approve"
                          echo "::set-output name=comment::unintented files changed"
                          exit 0
                     fi
                  done
                
            #Getting info of files changed in PR 
            git diff --unified=0 remotes/origin/${{ github.base_ref }}...remotes/origin/${{ github.head_ref }} >File
                    
             
            
            
            # removing base line with -- and getting remaing info of the Files changed
                            
                grep -v '^\-\-' File >FilterFile
           
            
          
            if grep -q '^\-' FilterFile; then
                echo "PR contains files with deleted or modified lines!!"
                echo "::set-output name=comment::Lines were Deleted or Modified"
                exit 0
            else
                echo "PR safe for labeling and Auto approve!!"
                echo "::set-output name=comment::Pass"
            fi
          
      - name: running script
        id: ConditionCheckStep1
        env:
          Base:  ${{ github.base_ref }}
          Head:  ${{ github.head_ref }}
        run: |
            chmod 777 ./script2.sh
            ./script2.sh
        
             
      - name: Processing Files Changed in PR
        id: ConditionCheckStep
        run: sh ./script2.sh
        
      - name: 'Labeling PR'
        uses: actions/github-script@v3
        if: steps.ConditionCheckStep.outputs.comment == 'Pass'
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            github.issues.addLabels({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              labels: ['auto-run']
            })
      - name: Approving PR 
        uses: hmarr/auto-approve-action@v2.0.0
        if: steps.ConditionCheckStep.outputs.comment == 'Pass'
        with:
         github-token: "${{ secrets.GITHUB_TOKEN }}"
          
      - name: 'Comment On Approved PR'
        uses: actions/github-script@v3
        if: steps.ConditionCheckStep.outputs.comment == 'Pass'
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { issue: { number: issue_number }, repo: { owner, repo }  } = context;
            github.issues.createComment({ issue_number, owner, repo, body: 'Thank you for your contribution ! ðŸ‘‹  Congratulation your PR has been approved and will be Merged automatically' });
      - name: merge
        uses: framer/merge-approved-pull-request-action@master
        if: steps.ConditionCheckStep.outputs.comment == 'Pass'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          MERGE_LABEL: auto-run
